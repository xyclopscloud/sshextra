#!/bin/bash
fun_bar() {
   comando[0]="$1"
   comando[1]="$2"
   (
      [[ -e $HOME/fim ]] && rm $HOME/fim
      [[ ! -e /usr/lib/sshextra ]] && rm -rf /bin/menu >/dev/null 2>&1
      ${comando[0]} -y >/dev/null 2>&1
      ${comando[1]} -y >/dev/null 2>&1
      touch $HOME/fim
   ) >/dev/null 2>&1 &
   tput civis
   echo -ne "\033[1;33m["
   while true; do
      for ((i = 0; i < 18; i++)); do
         echo -ne "\033[1;31m#"
         sleep 0.1s
      done
      [[ -e $HOME/fim ]] && rm $HOME/fim && break
      echo -e "\033[1;33m]"
      sleep 1s
      tput cuu1
      tput dl1
      echo -ne "\033[1;33m["
   done
   echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
   tput cnorm
}
IP=$(cat /etc/IP)
x="ok"
menu() {
   velocity() {
      aguarde() {
         comando[0]="$1"
         comando[1]="$2"
         (
            [[ -e $HOME/fim ]] && rm $HOME/fim
            [[ ! -d /etc/SSHExtra ]] && rm -rf /bin/menu
            ${comando[0]} >/dev/null 2>&1
            ${comando[1]} >/dev/null 2>&1
            touch $HOME/fim
         ) >/dev/null 2>&1 &
         tput civis
         echo -ne "  \033[1;33mWAIT \033[1;37m- \033[1;33m["
         while true; do
            for ((i = 0; i < 18; i++)); do
               echo -ne "\033[1;31m#"
               sleep 0.1s
            done
            [[ -e $HOME/fim ]] && rm $HOME/fim && break
            echo -e "\033[1;33m]"
            sleep 1s
            tput cuu1
            tput dl1
            echo -ne "  \033[1;33mWAIT \033[1;37m- \033[1;33m["
         done
         echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
         tput cnorm
      }
      fun_tst() {
         speedtest --share >speed
      }
      echo ""
      echo -e "   \033[1;32mTESTING SERVER SPEED !\033[0m"
      echo ""
      aguarde 'fun_tst'
      echo ""
      png=$(cat speed | sed -n '5 p' | awk -F : {'print $NF'})
      down=$(cat speed | sed -n '7 p' | awk -F : {'print $NF'})
      upl=$(cat speed | sed -n '9 p' | awk -F : {'print $NF'})
      lnk=$(cat speed | sed -n '10 p' | awk {'print $NF'})
      echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
      echo -e "\033[1;32mPING (LATENCIA):\033[1;37m$png"
      echo -e "\033[1;32mDOWNLOAD:\033[1;37m$down"
      echo -e "\033[1;32mUPLOAD:\033[1;37m$upl"
      echo -e "\033[1;32mLINK: \033[1;36m$lnk\033[0m"
      echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
      rm -rf $HOME/speed
   }
   #limiter
   function limit1() {
      clear
      echo -e "\n\033[1;32mSTARTING THE LIMITER... \033[0m"
      echo ""
      fun_bar 'screen -dmS limiter limiter' 'sleep 3'
      [[ $(grep -wc "limiter" /etc/autostart) = '0' ]] && {
         echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >>/etc/autostart
      } || {
         sed -i '/limiter/d' /etc/autostart
         echo -e "ps x | grep 'limiter' | grep -v 'grep' && echo 'ON' || screen -dmS limiter limiter" >>/etc/autostart
      }
      echo -e "\n\033[1;32m  ACTIVE LIMIT !\033[0m"
      sleep 3
      menu
   }
   function limit2() {
      clear
      echo -e "\033[1;32mSTOPPING THE LIMITER... \033[0m"
      echo ""
      fun_stplimiter() {
         sleep 1
         screen -r -S "limiter" -X quit
         screen -wipe 1>/dev/null 2>/dev/null
         [[ $(grep -wc "limiter" /etc/autostart) != '0' ]] && {
            sed -i '/limiter/d' /etc/autostart
         }
         sleep 1
      }
      fun_bar 'fun_stplimiter' 'sleep 3'
      echo -e "\n\033[1;31m LIMITER STOPPED !\033[0m"
      sleep 3
      menu
   }
   function limit_ssh() {
      [[ $(ps x | grep "limiter" | grep -v grep | wc -l) = '0' ]] && limit1 || limit2
   }
   #onlineapp
   function onapp1() {
      clear
      echo -e "\n\033[1;32mSTARTING THE ONLINE APP... \033[0m"
      echo ""
      apt install apache2 -y >/dev/null 2>&1
      sed -i "s/Listen 80/Listen 8888/g" /etc/apache2/ports.conf >/dev/null 2>&1
      service apache2 restart
      rm -rf /var/www/html/server >/dev/null 2>&1
      mkdir /var/www/html/server >/dev/null 2>&1
      fun_bar 'screen -dmS onlineapp onlineapp' 'sleep 3'
      [[ $(grep -wc "onlineapp" /etc/autostart) = '0' ]] && {
         echo -e "ps x | grep 'onlineapp' | grep -v 'grep' && echo 'ON' || screen -dmS onlineapp onlineapp" >>/etc/autostart
      } || {
         sed -i '/onlineapp/d' /etc/autostart
         echo -e "ps x | grep 'onlineapp' | grep -v 'grep' && echo 'ON' || screen -dmS onlineapp onlineapp" >>/etc/autostart
      }
      IP=$(wget -qO- ipv4.icanhazip.com) >/dev/null 2>&1
      echo -e "\n\033[1;32m  ONLINE ACTIVE APP !\033[0m"
      echo -e "\033[1;31m \033[1;33mOnline Users URL to use in the App\033[0m"
      echo -e " http://$IP:8888/server/online"
      sleep 10
      menu
   }
   function onapp2() {
      clear
      echo -e "\033[1;32mSTOPPING THE ONLINE APP... \033[0m"
      echo ""
      fun_stponlineapp() {
         sleep 1
         screen -r -S "onlineapp" -X quit
         screen -wipe 1>/dev/null 2>/dev/null
         [[ $(grep -wc "onlineapp" /etc/autostart) != '0' ]] && {
            sed -i '/onlineapp/d' /etc/autostart
         }
         sleep 1
      }
      fun_bar 'fun_stponlineapp' 'sleep 3'
      rm -rf /var/www/html/server >/dev/null 2>&1
      echo -e "\n\033[1;31m ONLINE APP STOPPED !\033[0m"
      sleep 3
      menu
   }
   function onapp_ssh() {
      [[ $(ps x | grep "onlineapp" | grep -v grep | wc -l) = '0' ]] && onapp1 || onapp2
   }
   ##
   function autoexec() {
      if grep "menu;" /etc/profile >/dev/null; then
         clear
         echo -e "\033[1;32mDEACTIVATING AUTO EXECUTION\033[0m"
         offautmenu() {
            sed -i '/menu;/d' /etc/profile
         }
         echo ""
         fun_bar 'offautmenu'
         echo ""
         echo -e "\033[1;31mAUTO EXECUTION DISABLED!\033[0m"
         sleep 1.5s
         menu2
      else
         clear
         echo -e "\033[1;32mACTIVATING AUTO EXECUTION\033[0m"
         autmenu() {
            grep -v "^menu;" /etc/profile >/tmp/tmpass && mv /tmp/tmpass /etc/profile
            echo "menu;" >>/etc/profile
         }
         echo ""
         fun_bar 'autmenu'
         echo ""
         echo -e "\033[1;32mAUTO EXECUTION ON!\033[0m"
         sleep 1.5s
         menu2
      fi

   }
   #menu2
   menu2() {
      [[ -e /etc/Plus-torrent ]] && stsf=$(echo -e "\033[1;32m◉ ") || stsf=$(echo -e "\033[1;31m○ ")
      stsbot=$(ps x | grep "bot_plus" | grep -v grep >/dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
      stsbotteste=$(ps x | grep "bot_teste" | grep -v grep >/dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
      stsbotrev=$(ps x | grep "bot_rev" | grep -v grep >/dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
      autm=$(grep "menu;" /etc/profile >/dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
      [[ ! -e /usr/lib/licence ]] && rm -rf /bin >/dev/null 2>&1
      if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
         system=$(cut -d' ' -f1 /etc/issue.net)
         system+=$(echo ' ')
         system+=$(cut -d' ' -f2 /etc/issue.net | awk -F "." '{print $1}')
      elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
         system=$(cut -d' ' -f1 /etc/issue.net)
         system+=$(echo ' ')
         system+=$(cut -d' ' -f3 /etc/issue.net)
      else
         system=$(cut -d' ' -f1 /etc/issue.net)
      fi
      _ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
      [[ "$(cat /etc/SSHExtra/Exp)" != "" ]] && _expuser=$(cat /etc/SSHExtra/Exp) || _expuser="0"
      [[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
      [[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
      _onli=$(($_ons + $_onop + $_ondrp))
      _ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
      _usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
      _usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
      _core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
      _system=$(printf '%-14s' "$system")
      _hora=$(printf '%(%H:%M:%S)T')
      _onlin=$(printf '%-5s' "$_onli")
      _userexp=$(printf '%-5s' "$_expuser")
      _tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
      clear
      echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
      echo -e "\E[41;1;37m       ⇱ SSHEXTRA MANAGER MOD:@oxide96⇲       \E[0m"
      echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
      echo -e "\033[1;32mSYSTEM            MEMORY RAM      PROCESSOR "
      echo -e "\033[1;31mOS: \033[1;37m$_system \033[1;31mTotal:\033[1;37m$_ram \033[1;31mCore: \033[1;37m$_core\033[0m"
      echo -e "\033[1;31mHour: \033[1;37m$_hora     \033[1;31mIn use: \033[1;37m$_usor \033[1;31mIn use: \033[1;37m$_usop\033[0m"
      echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
      [[ ! -e /tmp/att ]] && {
         echo -e "\033[1;32mOnlines:\033[1;37m $_onlin     \033[1;31mExpired: \033[1;37m$_userexp \033[1;33mTotal: \033[1;37m$_tuser\033[0m"
         var01='\033[1;37m•'
      } || {
         echo -e "  \033[1;33m[\033[1;31m!\033[1;33m]  \033[1;32mTHERE IS AN UPDATE AVAILABLE  \033[1;33m[\033[1;31m!\033[1;33m]\033[0m"
         var01="\033[1;32m!"
      }
      echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
      echo ""
      echo -e "\033[1;31m[\033[1;36m22\033[1;31m] \033[1;37m• \033[1;33mADD HOST \033[1;31m       [\033[1;36m29\033[1;31m] \033[1;37m• \033[1;33mCHANGE ROOT PASSWORD \033[1;31m
[\033[1;36m23\033[1;31m] \033[1;37m• \033[1;33mREMOVER HOST \033[1;31m   [\033[1;36m30\033[1;31m] \033[1;37m• \033[1;33mSELF-EXECUTION $autm \033[1;31m
[\033[1;36m24\033[1;31m] \033[1;37m• \033[1;33mRESET SYSTEM \033[1;31m   [\033[1;36m31\033[1;31m] $var01 \033[1;33mUPDATE SCRIPT \033[1;31m
[\033[1;36m25\033[1;31m] \033[1;37m• \033[1;33mRESTART SERVICE \033[1;31m[\033[1;36m32\033[1;31m] \033[1;37m• \033[1;33mREMOVER SCRIPT \033[1;31m
[\033[1;36m26\033[1;31m] \033[1;37m• \033[1;33mBLOCK TORRENT $stsf\033[1;31m[\033[1;36m33\033[1;31m] \033[1;37m• \033[1;33mBOT RESALE $stsbotrev\033[1;31m
[\033[1;36m27\033[1;31m] \033[1;37m• \033[1;33mBOT TELEGRAM $stsbot\033[1;31m [\033[1;36m34\033[1;31m] \033[1;37m• \033[1;33mTO GO BACK \033[1;32m<\033[1;33m<\033[1;31m< \033[1;31m
[\033[1;36m28\033[1;31m] \033[1;37m• \033[1;33mBOT TEST $stsbotteste\033[1;31m     [\033[1;36m00\033[1;31m] \033[1;37m• \033[1;33mEXIT \033[1;32m<\033[1;33m<\033[1;31m<\033[1;31m"
      echo ""
      echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
      echo ""
      echo -ne "\033[1;32mWHAT DO YOU WANT TO DO \033[1;33m?\033[1;31m?\033[1;37m : "
      read x
      case "$x" in
      22)
         clear
         addhost
         echo -ne "\n\033[1;31mENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"
         read
         menu2
         ;;
      23)
         clear
         delhost
         echo -ne "\n\033[1;31mENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"
         read
         menu2
         ;;
      24)
         clear
         reiniciarsistema
         ;;
      25)
         clear
         reiniciarservicos
         sleep 3
         ;;
      26)
         blockt
         ;;
      27)
         botssh
         ;;
      28)
         botteste.sh
         ;;
      29)
         clear
         senharoot
         sleep 3
         ;;
      30)
         autoexec
         ;;
      31)
         attscript
         ;;
      32)
         clear
         delscript
         ;;
      33)
         clear
         initbot
         ;;
      34)
         menu
         ;;

      0 | 00)
         echo -e "\033[1;31mLeaving...\033[0m"
         sleep 2
         clear
         exit
         ;;
      *)
         echo -e "\n\033[1;31mInvalid option !\033[0m"
         sleep 2
         ;;
      esac
   }
   while true $x != "ok"; do
      stsl=$(ps x | grep "limiter" | grep -v grep >/dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
      stson=$(ps x | grep "onlineapp" | grep -v grep >/dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
      stsu=$(ps x | grep "udpvpn" | grep -v grep >/dev/null && echo -e "\033[1;32m◉ " || echo -e "\033[1;31m○ ")
      if [[ "$(grep -c "Ubuntu" /etc/issue.net)" = "1" ]]; then
         system=$(cut -d' ' -f1 /etc/issue.net)
         system+=$(echo ' ')
         system+=$(cut -d' ' -f2 /etc/issue.net | awk -F "." '{print $1}')
      elif [[ "$(grep -c "Debian" /etc/issue.net)" = "1" ]]; then
         system=$(cut -d' ' -f1 /etc/issue.net)
         system+=$(echo ' ')
         system+=$(cut -d' ' -f3 /etc/issue.net)
      else
         system=$(cut -d' ' -f1 /etc/issue.net)
      fi
      _ons=$(ps -x | grep sshd | grep -v root | grep priv | wc -l)
      [[ "$(cat /etc/SSHExtra/Exp)" != "" ]] && _expuser=$(cat /etc/SSHPlus/Exp) || _expuser="0"
      [[ -e /etc/openvpn/openvpn-status.log ]] && _onop=$(grep -c "10.8.0" /etc/openvpn/openvpn-status.log) || _onop="0"
      [[ -e /etc/default/dropbear ]] && _drp=$(ps aux | grep dropbear | grep -v grep | wc -l) _ondrp=$(($_drp - 1)) || _ondrp="0"
      _onli=$(($_ons + $_onop + $_ondrp))
      _ram=$(printf ' %-9s' "$(free -h | grep -i mem | awk {'print $2'})")
      _usor=$(printf '%-8s' "$(free -m | awk 'NR==2{printf "%.2f%%", $3*100/$2 }')")
      _usop=$(printf '%-1s' "$(top -bn1 | awk '/Cpu/ { cpu = "" 100 - $8 "%" }; END { print cpu }')")
      _core=$(printf '%-1s' "$(grep -c cpu[0-9] /proc/stat)")
      _system=$(printf '%-14s' "$system")
      _hora=$(printf '%(%H:%M:%S)T')
      _onlin=$(printf '%-5s' "$_onli")
      _userexp=$(printf '%-5s' "$_expuser")
      _tuser=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
      clear
      echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
      echo -e "\E[41;1;37m       ⇱ SSHEXTRA MANAGER Mod:@oxide96⇲       \E[0m"
      echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
      echo -e "\033[1;32mSYSTEM            MEMORY RAM      PROCESSOR "
      echo -e "\033[1;31mOS: \033[1;37m$_system \033[1;31mTotal:\033[1;37m$_ram \033[1;31mCore: \033[1;37m$_core\033[0m"
      echo -e "\033[1;31mHour: \033[1;37m$_hora     \033[1;31mIn use: \033[1;37m$_usor \033[1;31mIn use: \033[1;37m$_usop\033[0m"
      echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
      echo -e "\033[1;32mOnlines:\033[1;37m $_onlin     \033[1;31mExpired: \033[1;37m$_userexp \033[1;33mTotal: \033[1;37m$_tuser\033[0m"
      echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
      echo ""
      echo -e "\033[1;31m[\033[1;36m01\033[1;31m] \033[1;37m• \033[1;33mCREATE USER \033[1;31m           [\033[1;36m11\033[1;31m] \033[1;37m• \033[1;33mSPEEDTEST \033[1;31m
[\033[1;36m02\033[1;31m] \033[1;37m• \033[1;33mCREATE TEST USER \033[1;31m      [\033[1;36m12\033[1;31m] \033[1;37m• \033[1;33mBANNER \033[1;31m
[\033[1;36m03\033[1;31m] \033[1;37m\033[1;37m• \033[1;33mREMOVE USER \033[1;31m           [\033[1;36m13\033[1;31m] \033[1;37m• \033[1;33mTRAFFIC \033[1;31m
[\033[1;36m04\033[1;31m] \033[1;37m• \033[1;33mMONITOR ONLINE \033[1;31m        [\033[1;36m14\033[1;31m] \033[1;37m• \033[1;33mOPTIMIZE \033[1;31m
[\033[1;36m05\033[1;31m] \033[1;37m• \033[1;33mCHANGE DATE \033[1;31m           [\033[1;36m15\033[1;31m] \033[1;37m• \033[1;33mBACKUP \033[1;31m
[\033[1;36m06\033[1;31m] \033[1;37m• \033[1;33mCHANGE LIMIT \033[1;31m          [\033[1;36m16\033[1;31m] \033[1;37m• \033[1;33mMEMORY VIRTUAL\033[1;31m
[\033[1;36m07\033[1;31m] \033[1;37m• \033[1;33mCHANGE PASSWORD \033[1;31m       [\033[1;36m17\033[1;31m] \033[1;37m• \033[1;33mLIMITER $stsl\033[1;31m
[\033[1;36m08\033[1;31m] \033[1;37m• \033[1;33mREMOVE EXPIRED \033[1;31m        [\033[1;36m18\033[1;31m] \033[1;37m• \033[1;33mBAD VPN PRO $stsu\033[1;31m
[\033[1;36m09\033[1;31m] \033[1;37m• \033[1;33mUSER REPORT \033[1;31m           [\033[1;36m19\033[1;31m] \033[1;37m• \033[1;33mONLINE APP $stson\033[1;31m
[\033[1;36m10\033[1;31m] \033[1;37m• \033[1;33mCONNECTION MODE \033[1;31m       [\033[1;36m20\033[1;31m] \033[1;37m• \033[1;33mINFO VPS \033[1;31m>\033[1;33m>\033[1;32m>\033[0m\033[1;31m
[\033[1;36m00\033[1;31m] \033[1;37m• \033[1;33mEXIT \033[1;31m                  [\033[1;36m21\033[1;31m] \033[1;37m• \033[1;33mMORE \033[1;31m>\033[1;33m>\033[1;32m>\033[0m\033[1;31m"
      echo ""
      echo -e "\033[0;34m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\033[0m"
      echo ""
      echo -ne "\033[1;32mWHAT DO YOU WANT TO DO \033[1;33m?\033[1;31m?\033[1;37m : "
      read x

      case "$x" in
      1 | 01)
         clear
         criarusuario
         echo -ne "\n\033[1;31mENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"
         read
         ;;
      2 | 02)
         clear
         criarteste
         echo -ne "\n\033[1;31mENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"
         read
         ;;
      3 | 03)
         clear
         remover
         sleep 3
         ;;
      4 | 04)
         clear
         sshmonitor
         echo -ne "\n\033[1;31mENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"
         read
         ;;
      5 | 05)
         clear
         mudardata
         sleep 3
         ;;
      6 | 06)
         clear
         alterarlimite
         sleep 3
         ;;
      7 | 07)
         clear
         alterarsenha
         sleep 3
         ;;
      8 | 08)
         clear
         expcleaner
         echo ""
         sleep 3
         ;;
      9 | 09)
         clear
         infousers
         echo -ne "\n\033[1;31mENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"
         read
         ;;
      10)
         conexao
         exit
         ;;
      11)
         clear
         velocity
         echo -ne "\n\033[1;31mENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"
         read
         ;;
      12)
         clear
         banner
         sleep 3
         ;;
      13)
         clear
         echo -e "\033[1;32mTO GET OUT CLICK CTRL + C\033[1;36m"
         sleep 4
         nload
         ;;
      14)
         clear
         otimizar
         echo -ne "\n\033[1;31mENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"
         read
         ;;
      15)
         userbackup
         echo -ne "\n\033[1;31mENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"
         read
         ;;
      16)
         swapmemory
         ;;
      17)
         limit_ssh
         ;;
      18)
         clear
         badvpn
         exit
         ;;
      19)
         onapp_ssh
         ;;
      20)
         clear
         detalhes
         echo -ne "\n\033[1;31mENTER \033[1;33mto return to \033[1;32mMENU!\033[0m"
         read
         ;;
      21)
         menu2
         ;;
      0 | 00)
         echo -e "\033[1;31mLeaving...\033[0m"
         sleep 2
         clear
         exit
         ;;
      *)
         echo -e "\n\033[1;31mInvalid option !\033[0m"
         sleep 2
         ;;
      esac
   done
}
menu
#fim
